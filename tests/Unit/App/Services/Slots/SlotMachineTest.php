<?php

namespace Unit\App\Services\Slots;

use App\Services\Slots\PayLine;
use App\Services\Slots\SlotMachine;
use App\Services\Slots\SlotsGenerator;

class SlotMachineTest extends \TestCase
{

    /**
     * @var SlotMachine
     */
    private $slotMachine;

    /**
     * Predefined paylines for testing.
     *
     * @var array
     */
    private $payLines = [
        [0, 3, 6, 9, 12],
        [1, 4, 7, 10, 13],
        [2, 5, 8, 11, 14],
        [0, 4, 8, 10, 12],
        [2, 4, 6, 10, 14]
    ];

    /**
     * Setup board and payline for testing functions
     *
     * @throws \Exception
     */
    function setUp(): void
    {
        $board = SlotsGenerator::playWithDefinedSlots([
            "J", "Cat", "Blir", "J", "J", "Bir", "J", "Q", "J", "Q", "Mon", "Q", "K", "Bir", "A"
        ]);

        $payline = (new PayLine(5))->forcePaylines($this->payLines);

        $this->slotMachine = new SlotMachine($board, $payline, 1);

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * Test to check wining paylines are as expected
     */
    function testWinningPayLines(): void
    {
        $result = ($this->slotMachine->determineWinningLines())->getWinningLines();

        $this->assertEquals([0 => 3, 3 => 3], $result, 'Asserting that row 0 and 3 are winning paylines with 3 consecutive items in both row.');
    }

    /**
     * Test to check wining amount is calculated accurately
     */
    function testCalculateWinningAmount(): void
    {
        $result = ($this->slotMachine->calculateWinningAmount())->getWinningAmount();

        $this->assertEquals(40, $result, 'Asserting that total wining amount is 40.');
    }

    /**
     * Test to check if wining payline are formatted as needed
     */
    function testFormatWinningPayLines(): void
    {
        $this->slotMachine->calculateWinningAmount();

        $result = $this->slotMachine->formatWiningPayLines();;

        $this->assertEquals([
            ["0, 3, 6, 9, 12" => 3],
            ["0, 4, 8, 10, 12" => 3]
        ], $result, 'Asserting that formatted payline has key as row 0 and 3 and values as 3.');
    }
}
